[project]
name = "post-disaster-comms"
version = "0.1.0"
description = "post-disaster communications project"
authors = ["Don Setiawan"]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64"]

[environments]
frontend = ["frontend"]
backend = ["backend", "db"]

# ==== Backend Database environment ====
[feature.db.dependencies]
python = ">=3.10"
pip = "*"

[feature.db.pypi-dependencies]
support-sphere-py = { path = "./src/support_sphere_py", editable = true }

[feature.db.tasks]
populate-sample-entries = { depends-on = ["populate-user-details"]}

[feature.db.tasks.populate-user-details]
cmd = "python3 ./src/support_sphere_py/tests/resources/scripts/update_db_sample_data.py"

# ==== Backend environment ====
[feature.backend.tasks]
install-tools = { depends-on = ["install-k3d", "fetch-supabase-chart"] }
setup-infra = { depends-on = ["k3d-create-cluster", "set-registry-secret", "setup-supabase", "port-forward-supabase-db"] }

[feature.backend.dependencies]
curl = ">=8.8.0,<8.9"
kubernetes-helm = ">=3.15.3,<3.16"
kubernetes-client = ">=1.23.6,<1.31"

# Supabase tasks
[feature.backend.tasks.set-registry-secret]
# This task will need docker username and password
# to be set as environment variables
# DOCKER_USERNAME and DOCKER_PASSWORD
cmd = "scripts/docker-login.sh"

[feature.backend.tasks.fetch-supabase-chart]
cmd = "git submodule update --init"

[feature.backend.tasks.setup-supabase]
cmd = [
    "helm",
    "upgrade",
    "supabase", 
    "vendors/supabase-kubernetes/charts/supabase",
    "--install",
    "--wait",
    "--cleanup-on-fail",
    "--values",
    "deployment/values.dev.yaml"
]
depends-on = ["fetch-supabase-chart"]

[feature.backend.tasks.port-forward-supabase-db]
cmd = "kubectl port-forward service/supabase-supabase-db 5432:5432"
depends-on = ["setup-supabase"]

# K3D Tasks
[feature.backend.tasks.install-k3d]
cmd = "curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash"
outputs = ["**/bin/k3d"]

[feature.backend.tasks.install-k3d.env]
K3D_INSTALL_DIR = "$CONDA_PREFIX/bin"
USE_SUDO = "false"

[feature.backend.tasks.k3d-create-cluster]
cmd = [
    "k3d",
    "cluster",
    "create",
    "pdc-cluster",
    "-p", "80:80@loadbalancer",
    "-p", "5432:5432@loadbalancer",
]
depends-on = ["install-k3d", "k3d-delete-cluster"]

[feature.backend.tasks.k3d-delete-cluster]
cmd = "k3d cluster delete pdc-cluster"

# Fast API tasks
[feature.backend.tasks.run-fast-api-server-run]
cmd = "fastapi run ./src/support_sphere_py/src/support_sphere/apis/main.py"

# Runs the Fast API server in editable mode - auto-triggers restart when source files are changed.
[feature.backend.tasks.fast-api-server-dev]
cmd = "fastapi dev ./src/support_sphere_py/src/support_sphere/apis/main.py"


# ==== Frontend environment ====
[feature.frontend.tasks]
install-tools = { depends-on = ["install-flutter"] }
setup-infra = { depends-on = ["check-android-licenses", "flutter-get"] }

[feature.frontend.dependencies]
python = ">=3.10"
ipykernel = ">=6.29.5,<6.30"
rich = ">=13.7.1,<13.8"
ruby = ">=3.3.3,<3.4"

# Flutter tasks
[feature.frontend.tasks.flutter-run]
cmd = "flutter run"
cwd = "src/support_sphere"
depends-on = ["flutter-devices", "flutter-get"]

[feature.frontend.tasks.flutter-get]
cmd = "flutter pub get"
cwd = "src/support_sphere"
depends-on = ["check-flutter"]

[feature.frontend.tasks.flutter-devices]
cmd = "flutter devices"
cwd = "src/support_sphere"
depends-on = ["check-flutter"]

[feature.frontend.tasks.install-flutter]
cmd = "python scripts/install-flutter.py"
outputs = [".app/flutter"]

[feature.frontend.tasks.check-flutter]
cmd = "flutter doctor"
depends-on = ["install-flutter"]

[feature.frontend.tasks.check-android-licenses]
cmd = "flutter doctor --android-licenses"
depends-on = ["install-flutter"]
